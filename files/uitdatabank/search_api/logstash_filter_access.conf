json {
  source       => "message"
  remove_field => ["message", "path", "type"]
}

urldecode {
  field => query
}

kv {
  source          => clientProperties
  target          => clientProperties
  remove_char_key => " "
  value_split     => "|"
  field_split     => ","
}

ruby {
  code => 'client_properties = event.get("clientProperties"); if client_properties == "-"; event.set("clientProperties", {}) else event.set("clientProperties", { "cluster" => [client_properties["cluster"]].flatten }) end'
}

kv {
  source          => query
  target          => parameters
  field_split     => "&?"
  remove_char_key => "\[\]"
  exclude_keys    => ["apiKey"]
}

date {
  match => ["time", "yyyy-MM-dd HH:mm:ss.SSS"]
}

ruby {
  code => '["completedLanguages", "facets", "labels", "languages", "locationTermIds", "locationTermLabels", "termIds", "termLabels"].each { |item| value = event.get("[parameters][#{item}]"); value.is_a?(String) && event.set("[parameters][#{item}]", value.split) }'
}

mutate {
  rename       => { "[beat][hostname]" => "[@metadata][hostname]" }
  add_field    => { "[@metadata][log_type]" => ""%{[fields][log_type]}" }
  add_field    => { "[@metadata][environment]" => ""%{[fields][environment]}" }
  remove_field => ["beat", "tags", "source", "offset", "@version", "fields", "@timestamp"]
}
